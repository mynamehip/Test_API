// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Entities;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20240222153629_Add_User")]
    partial class Add_User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Entities.Chitietdh", b =>
                {
                    b.Property<Guid>("Madh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Mahh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Dongia")
                        .HasColumnType("float");

                    b.Property<byte>("Giamgia")
                        .HasColumnType("tinyint");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.HasKey("Madh", "Mahh");

                    b.HasIndex("Mahh");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Entities.Donhang", b =>
                {
                    b.Property<Guid>("Madh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ngaydh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("Ngaygiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nguoimua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sodienthoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tinhtrangdh")
                        .HasColumnType("int");

                    b.HasKey("Madh");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Entities.Hanghoa", b =>
                {
                    b.Property<Guid>("Mahh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Dongia")
                        .HasColumnType("float");

                    b.Property<byte>("Giamgia")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MaLoai")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tenhh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Mahh");

                    b.HasIndex("MaLoai");

                    b.ToTable("HangHoa");
                });

            modelBuilder.Entity("WebApplication1.Entities.Loaihh", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoai"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLoai");

                    b.ToTable("Loaihh");
                });

            modelBuilder.Entity("WebApplication1.Entities.Nguoidung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Hoten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Nguoidung");
                });

            modelBuilder.Entity("WebApplication1.Entities.Chitietdh", b =>
                {
                    b.HasOne("WebApplication1.Entities.Donhang", "Donhang")
                        .WithMany("Chitietdh")
                        .HasForeignKey("Madh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Chitietdh_Donhang");

                    b.HasOne("WebApplication1.Entities.Hanghoa", "Hanghoa")
                        .WithMany("Chitietdh")
                        .HasForeignKey("Mahh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Chitietdh_Hanghoa");

                    b.Navigation("Donhang");

                    b.Navigation("Hanghoa");
                });

            modelBuilder.Entity("WebApplication1.Entities.Hanghoa", b =>
                {
                    b.HasOne("WebApplication1.Entities.Loaihh", "Loaihh")
                        .WithMany("HangHoa")
                        .HasForeignKey("MaLoai");

                    b.Navigation("Loaihh");
                });

            modelBuilder.Entity("WebApplication1.Entities.Donhang", b =>
                {
                    b.Navigation("Chitietdh");
                });

            modelBuilder.Entity("WebApplication1.Entities.Hanghoa", b =>
                {
                    b.Navigation("Chitietdh");
                });

            modelBuilder.Entity("WebApplication1.Entities.Loaihh", b =>
                {
                    b.Navigation("HangHoa");
                });
#pragma warning restore 612, 618
        }
    }
}
